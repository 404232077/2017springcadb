var tipuesearch = {"pages":[{"tags":"misc","title":"About","url":"./pages/about/","text":"2017Spring 機械設計工程系協同產品設計實習 404232077朱修林課程倉儲 404232077朱修林課程投影片 404232077朱修林課程網誌"},{"tags":"Course","title":"20170426 week17","url":"./week17.html","text":"期末協同查驗與自評 第二題 2D window.onload=function(){ // 設定 data/py 為共用程式路徑 brython({debug:1, pythonpath:['./../data/py']}); } from browser import document as doc import math # deg 為角度轉為徑度的轉換因子 deg = math.pi/180. # 定義 Spur 類別 class Spur(object): def __init__(self, ctx): self.ctx = ctx # 設定畫線參數 def create_line(self, x1, y1, x2, y2, width=3, fill=\"red\"): self.ctx.beginPath() self.ctx.lineWidth = width self.ctx.moveTo(x1, y1) self.ctx.lineTo(x2, y2) self.ctx.strokeStyle = fill self.ctx.stroke() def create_line2(self, x1, y1, x2, y2, width=3, fill=\"green\"): self.ctx.beginPath() self.ctx.lineWidth = width self.ctx.moveTo(x1, y1) self.ctx.lineTo(x2, y2) self.ctx.strokeStyle = fill self.ctx.stroke() def create_line3(self, x1, y1, x2, y2, width=3, fill=\"black\"): self.ctx.beginPath() self.ctx.lineWidth = width self.ctx.moveTo(x1, y1) self.ctx.lineTo(x2, y2) self.ctx.strokeStyle = fill self.ctx.stroke() def Gear(self, midx, midy, rp, n=20, pa=20, color=\"black\"): rp = 250 imax = 15 m=2*rp/n a=m d=1.25*m ra=rp+a # self.create_line(起點X, 起點Y, 終點X, 終點Y) # 畫出黑色外框 self.create_line3(0, 0, 0, 600) self.create_line3(0, 600, 800, 600) self.create_line3(800, 600, 800, 0) self.create_line3(800, 0, 0, 0) # 傾斜地板 self.create_line(400,481.75,124.06,481.75) self.create_line(124.06,481.75,643.95,427.11) # 右腳 self.create_line2(385.9,157.88,414.1,147.62) self.create_line2(414.1,147.62,499.6,382.54) self.create_line2(385.9,157.88,471.41,392.8) self.create_line2(433.82,406.48,537.19,368.86) self.create_line2(537.19,368.86,552.16,409.99) self.create_line2(552.16,409.99,448.79,447.62) self.create_line2(448.79,447.62,433.82,406.48) #左腳 self.create_line2(300.40,382.54,385.9,147.62) self.create_line2(385.9,147.62,414.1,157.88) self.create_line2(414.1,157.88,328.59,392.8) self.create_line2(262.81,368.86,366.18,406.48) self.create_line2(366.18,406.48,351.2,447.62) self.create_line2(351.2,447.62,247.84,410) self.create_line2(247.84,410,262.81,368.86) if rd>rb: dr = (ra-rd)/imax else: dr=(ra-rb)/imax sigma=math.pi/(2*n)+math.tan(pa*deg)-pa*deg for j in range(-9, 10, +1): ang=-2.*j*math.pi/n+sigma ang2=2.*j*math.pi/n+sigma lxd=midx+rd*math.sin(ang2-2.*math.pi/n) lyd=midy-rd*math.cos(ang2-2.*math.pi/n) for i in range(imax+1): if rd>rb: r=rd+i*dr else: r=rb+i*dr theta=math.sqrt((r*r)/(rb*rb)-1.) alpha=theta-math.atan(theta) xpt=r*math.sin(alpha-ang) ypt=r*math.cos(alpha-ang) xd=rd*math.sin(-ang) yd=rd*math.cos(-ang) if(i==0): last_x = midx+xd last_y = midy-yd self.create_line((lxd),(lyd),(midx+xd),(midy-yd),fill=color) for i in range(imax+1): if rd>rb: r=rd+i*dr else: r=rb+i*dr theta=math.sqrt((r*r)/(rb*rb)-1.) alpha=theta-math.atan(theta) xpt=r*math.sin(ang2-alpha) ypt=r*math.cos(ang2-alpha) xd=rd*math.sin(ang2) yd=rd*math.cos(ang2) if(i==0): last_x = midx+xd last_y = midy-yd self.create_line((midx+xpt),(midy-ypt),(last_x),(last_y),fill=color) if(i==imax): rfx=midx+xpt rfy=midy-ypt last_x = midx+xpt last_y = midy-ypt self.create_line(lfx,lfy,rfx,rfy,fill=color) canvas = doc['onegear2'] ctx = canvas.getContext(\"2d\") x = (canvas.width)/2 y = (canvas.height)/2 r = 0.8*(canvas.height/2) # 齒數 n = 36 # 壓力角 pa = 20 Spur(ctx).Gear(x, y, r, n, pa, \"blue\") 操作影片 第三題"},{"tags":"Course","title":"20170426 week15","url":"./week15.html","text":"單一正齒輪 window.onload=function(){ // 設定 data/py 為共用程式路徑 brython({debug:1, pythonpath:['./../data/py']}); } from browser import document as doc import math # deg 為角度轉為徑度的轉換因子 deg = math.pi/180. # 定義 Spur 類別 class Spur(object): def __init__(self, ctx): self.ctx = ctx def create_line(self, x1, y1, x2, y2, width=3, fill=\"red\"): self.ctx.beginPath() self.ctx.lineWidth = width self.ctx.moveTo(x1, y1) self.ctx.lineTo(x2, y2) self.ctx.strokeStyle = fill self.ctx.stroke() # # 定義一個繪正齒輪的繪圖函式 # midx 為齒輪圓心 x 座標 # midy 為齒輪圓心 y 座標 # rp 為節圓半徑, n 為齒數 # pa 為壓力角 (deg) # rot 為旋轉角 (deg) # 已經針對 n 大於等於 52 齒時的繪圖錯誤修正, 因為 base circle 與齒根圓大小必須進行判斷 def Gear(self, midx, midy, rp, n=20, pa=20, color=\"black\"): rp=250 # 齒輪漸開線分成 15 線段繪製 imax = 15 # 在輸入的畫布上繪製直線, 由圓心到節圓 y 軸頂點畫一直線 self.create_line(midx, midy, midx, midy-rp) # 畫出 rp 圓, 畫圓函式尚未定義 #create_oval(midx-rp, midy-rp, midx+rp, midy+rp, width=2) # a 為模數 (代表公制中齒的大小), 模數為節圓直徑(稱為節徑)除以齒數 # 模數也就是齒冠大小 a=2*rp/n # d 為齒根大小, 為模數的 1.157 或 1.25倍, 這裡採 1.25 倍 d=2.5*rp/n # ra 為齒輪的外圍半徑 ra=rp+a # 畫出 ra 圓, 畫圓函式尚未定義 #create_oval(midx-ra, midy-ra, midx+ra, midy+ra, width=1) # rb 則為齒輪的基圓半徑 # 基圓為漸開線長齒之基準圓 rb=rp*math.cos(pa*deg) # 畫出 rb 圓 (基圓), 畫圓函式尚未定義 #create_oval(midx-rb, midy-rb, midx+rb, midy+rb, width=1) # rd 為齒根圓半徑 rd=rp-d # 當 rd 大於 rb 時, 漸開線並非畫至 rb, 而是 rd # 畫出 rd 圓 (齒根圓), 畫圓函式尚未定義 #create_oval(midx-rd, midy-rd, midx+rd, midy+rd, width=1) # dr 則為基圓到齒頂圓半徑分成 imax 段後的每段半徑增量大小 # 將圓弧分成 imax 段來繪製漸開線 # 當 rd 大於 rb 時, 漸開線並非畫至 rb, 而是 rd if rd>rb: dr = (ra-rd)/imax else: dr=(ra-rb)/imax # tan(pa*deg)-pa*deg 為漸開線函數 sigma=math.pi/(2*n)+math.tan(pa*deg)-pa*deg for j in range(n): ang=-2.*j*math.pi/n+sigma ang2=2.*j*math.pi/n+sigma lxd=midx+rd*math.sin(ang2-2.*math.pi/n) lyd=midy-rd*math.cos(ang2-2.*math.pi/n) for i in range(imax+1): # 當 rd 大於 rb 時, 漸開線並非畫至 rb, 而是 rd if rd>rb: r=rd+i*dr else: r=rb+i*dr theta=math.sqrt((r*r)/(rb*rb)-1.) alpha=theta-math.atan(theta) xpt=r*math.sin(alpha-ang) ypt=r*math.cos(alpha-ang) xd=rd*math.sin(-ang) yd=rd*math.cos(-ang) # i=0 時, 繪線起點由齒根圓上的點, 作為起點 if(i==0): last_x = midx+xd last_y = midy-yd # 由左側齒根圓作為起點, 除第一點 (xd,yd) 齒根圓上的起點外, 其餘的 (xpt,ypt)則為漸開線上的分段點 self.create_line((midx+xpt),(midy-ypt),(last_x),(last_y),fill=color) # 最後一點, 則為齒頂圓 if(i==imax): lfx=midx+xpt lfy=midy-ypt last_x = midx+xpt last_y = midy-ypt # the line from last end of dedendum point to the recent # end of dedendum point # lxd 為齒根圓上的左側 x 座標, lyd 則為 y 座標 # 下列為齒根圓上用來近似圓弧的直線 self.create_line((lxd),(lyd),(midx+xd),(midy-yd),fill=color) for i in range(imax+1): # 當 rd 大於 rb 時, 漸開線並非畫至 rb, 而是 rd if rd>rb: r=rd+i*dr else: r=rb+i*dr theta=math.sqrt((r*r)/(rb*rb)-1.) alpha=theta-math.atan(theta) xpt=r*math.sin(ang2-alpha) ypt=r*math.cos(ang2-alpha) xd=rd*math.sin(ang2) yd=rd*math.cos(ang2) # i=0 時, 繪線起點由齒根圓上的點, 作為起點 if(i==0): last_x = midx+xd last_y = midy-yd # 由右側齒根圓作為起點, 除第一點 (xd,yd) 齒根圓上的起點外, 其餘的 (xpt,ypt)則為漸開線上的分段點 self.create_line((midx+xpt),(midy-ypt),(last_x),(last_y),fill=color) # 最後一點, 則為齒頂圓 if(i==imax): rfx=midx+xpt rfy=midy-ypt last_x = midx+xpt last_y = midy-ypt # lfx 為齒頂圓上的左側 x 座標, lfy 則為 y 座標 # 下列為齒頂圓上用來近似圓弧的直線 self.create_line(lfx,lfy,rfx,rfy,fill=color) canvas = doc['onegear'] ctx = canvas.getContext(\"2d\") x = (canvas.width)/2 y = (canvas.height)/2 r = 0.8*(canvas.height/2) # 齒數 n = 36 # 壓力角 pa = 20 Spur(ctx).Gear(x, y, r, n, pa, \"blue\") ctx.beginPath() ctx.fillstyle = \"#FF359A\" ctx.font = \"30px ScriptS\" ctx.fillText(\"404232077 \",350,400) ctx.stroke()"},{"tags":"Course","title":"20170426 week10","url":"./week10.html","text":"第十周上課內容 1.將四連桿四足行走機構匯到 V-rep 內模擬。"},{"tags":"Course","title":"20170419 week9","url":"./week9.html","text":"第九周期中報告 part1: 1.每個小組的成員在 solvespace 畫出四連桿，四連桿的上三角部分其中一邊常設為變數，每個人負責不同的變數繪製到 solvespace。 2.使用點追蹤，追蹤變數邊常上面那點，並且匯出成路徑圖，呈現每個組員的路徑圖道小組網誌。 個人路徑圖: window.onload=function(){ brython(1); } from browser import document as doc from browser import html import math # 準備繪圖畫布 canvas = doc[\"fourbar\"] container1 = doc['container1'] ctx = canvas.getContext(\"2d\") fourbar_data = open(\"./../data/midterm3.csv\").read() fourbar_list = fourbar_data.splitlines() #container1 <= fourbar_list[0] # 以下可以利用 ctx 物件進行畫圖 # 先畫一條直線 ctx.beginPath() # 設定線的寬度為 1 個單位 ctx.lineWidth = 1 # 利用 transform 將 y 座標反轉, 且 offset canvas.height # (X scale, X skew, Y skew, Y scale, X offset, Y offset) # 配合圖形位置進行座標轉換 ctx.transform(1, 0, 0, -1, canvas.width/2+250, canvas.height/2+100) # 畫出 x 與 y 座標線 # 各座標值放大 4 倍 ratio = 4 ctx.moveTo(0, 0) ctx.lineTo(-30*ratio, 0) start_point = fourbar_list[0].split(\",\") ctx.moveTo(float(start_point[0])*ratio, float(start_point[1])*ratio) count = 0 for data in fourbar_list[1:]: point = data.split(\",\") #count = count + 1 #container1 <= str(count) + \":\" + point[0] + \",\" + point[1] #container1 <= html.BR() ctx.lineTo(float(point[0])*ratio, float(point[1])*ratio) # 設定顏色為藍色, 也可以使用 \"rgb(0, 0, 255)\" 字串設定顏色值 ctx.strokeStyle = \"blue\" # 實際執行畫線 ctx.stroke() ctx.closePath()"},{"tags":"Course","title":"20170412 week8","url":"./week8.html","text":"期中第一次互評與自評 自評網址: http://mde1a2.kmol.info:8000/k96tgzh1ofbl 互評網址: https://pygroup-ag100.rhcloud.com"},{"tags":"Course","title":"20170329 week6","url":"./week6.html","text":"第六周上課內容 1.在 onshape 用變數的方式重新標註 fourbarlinkage。 2.完成之後輸出成 STL檔，轉入 V-rep。 在 onshaoe 使用變數標註尺寸影片:"},{"tags":"Course","title":"20170322 week5","url":"./week5.html","text":"第五周上課內容 1.把在 solvespace 完成的 one-line 組立，轉進 V-rep。 操作過程影片:"},{"tags":"Course","title":"20170315 week4","url":"./week4.html","text":"第四周上課內容 1.各組建立好自己的fossil平台 2.每個組員設定好自己的帳號密碼 3.在 solvespace 繪製 one_link的零件並且完成組立。 solvespace-onelink 零件: base pin rod 組立: Assembly"},{"tags":"Course","title":"20170308 week3","url":"./week3.html","text":"第三周上課內容 1.用 solvespace和 onshape劃出四連趕機構零件並組裝 2.轉入Vrep模擬 3.錄製影片展示在自己的個人網誌上 solvespace 零件: fourbarlinkage_30 fourbarlinkage_50 fourbarlinkage_60 組裝: fourbarlinkage_60 onshape 零件: fourbarlinkage_30 fourbarlinkage_50 fourbarlinkage_60 組裝: fourbarlinkage_60 fourbarlinkage"},{"tags":"Course","title":"20170301 week2","url":"./week2.html","text":"第二周上課內容 1.下載兩個老師 github倉儲四連桿機構的檔案。 2.檔案名稱分別是 fourbar_eightbar_solvespace_vrep與 onelink_vrep_remoteapi_pos_vel，下載完成後解壓縮 會得到三個資料夾。 3.熟悉與理解 fourbarlinkage資料夾內的零件與組立。 第二周上課內容影片"},{"tags":"Course","title":"20170222 week1","url":"./week1.html","text":"第一周上課內容 更正stunnel上的IP設定 操作步驟 1.先到課程網誌下載 tiny2017 1GB大小的程式。 2.開啟 star，利用 ipconfig /all指令找出自己電腦的IP。 3.把 stunnel.conf拉到SciTE，更改IP，允許防火牆。 第一周上課內容影片"}]};